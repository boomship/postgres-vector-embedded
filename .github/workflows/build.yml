name: Build PostgreSQL + pgvector

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-14
            platform: darwin
            arch: arm64
          - os: macos-13
            platform: darwin  
            arch: x64
          - os: ubuntu-latest
            platform: linux
            arch: x64
          - os: ubuntu-latest
            platform: linux
            arch: arm64
            setup: |
              sudo apt-get update
              sudo apt-get install -y gcc-aarch64-linux-gnu
          - os: windows-latest
            platform: win32
            arch: x64

    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up build environment
      if: matrix.setup
      run: ${{ matrix.setup }}

    - name: Install dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential zlib1g-dev libreadline-dev libssl-dev

    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install openssl readline

    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        # Windows dependencies will be handled via vcpkg or pre-built libraries
        echo "Windows build setup"

    - name: Get version from package.json
      id: version
      shell: bash
      run: |
        VERSION=$(node -p "require('./package.json').version")
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          VERSION="$VERSION-pr-${{ github.event.number }}"
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Building version: $VERSION"

    - name: Build PostgreSQL + pgvector
      shell: bash
      run: |
        export PLATFORM=${{ matrix.platform }}
        export ARCH=${{ matrix.arch }}
        make build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: postgres-${{ matrix.platform }}-${{ matrix.arch }}
        path: dist/postgres-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4

    - name: Get version from package.json
      id: version
      run: |
        VERSION=$(node -p "require('./package.json').version")
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Prepare release assets
      run: |
        mkdir release-assets
        find artifacts -name "*.tar.gz" -exec cp {} release-assets/ \;
        ls -la release-assets/

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.version.outputs.version }}
        name: v${{ steps.version.outputs.version }}
        body: |
          PostgreSQL + pgvector embedded binaries
          
          Built from:
          - PostgreSQL 17.2
          - pgvector 0.8.0
          
          Download the appropriate binary for your platform and architecture.
        files: release-assets/*
        make_latest: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}